<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:jpa="http://www.springframework.org/schema/data/jpa"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
   http://www.springframework.org/schema/beans/spring-beans.xsd
   http://www.springframework.org/schema/context
   http://www.springframework.org/schema/context/spring-context-3.0.xsd
   http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
    http://www.springframework.org/schema/data/jpa
    http://www.springframework.org/schema/data/jpa/spring-jpa.xsd">

    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver"
          p:prefix="/WEB-INF/jsp/"
          p:suffix=".jsp"/>

    <beans profile="postgres">
        <context:property-placeholder location="classpath:db/postgres.properties" system-properties-mode="OVERRIDE"
                                      order="0"
                                      ignore-unresolvable="true"/>
    </beans>

    <beans profile="hibernateDs">
        <context:property-placeholder location="classpath:db/gen.properties"
                                      order="1"/>

        <context:component-scan base-package="valksam.mvcweb.repository.hibernate"/>

        <bean id="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean"
              p:dataSource-ref="dataSource"
              p:packagesToScan="valksam.mvcweb.model">
            <property name="hibernateProperties">
                <props>
                    <prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
                    <prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
                    <prop key="hibernate.use_sql_comments">${hibernate.use_sql_comments}</prop>
                    <!--cache 2-d level-->
                    <prop key="hibernate.cache.region.factory_class">org.hibernate.cache.ehcache.SingletonEhCacheRegionFactory</prop>
                    <prop key="hibernate.cache.use_second_level_cache">${hibernate.use_second_level_cache}</prop>
                    <prop key="net.sf.ehcache.configurationResourceName">cache/ehcache.xml</prop>
                    <!--cache 3-d level-->
                    <prop key="hibernate.cache.use_query_cache">${hibernate.use_query_cache}</prop>
                    <!--  -->
                </props>
            </property>
        </bean>
    </beans>

    <beans profile="hibernate">
        <context:property-placeholder location="classpath:db/gen.properties"
                                      order="1"/>

        <context:component-scan base-package="valksam.mvcweb.repository.hibernate"/>

        <bean id="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean"
              p:configLocation="classpath:db/hibernate.cfg.xml"
              p:packagesToScan="valksam.mvcweb.model">
            <property name="hibernateProperties">
                <props>
                    <prop key="hibernate.connection.driver_class">${database.driverClassName}</prop>
                    <prop key="hibernate.dialect">${dialect}</prop>
                    <prop key="hibernate.connection.url">${database.url}</prop>
                    <prop key="hibernate.connection.username">${database.username}</prop>
                    <prop key="hibernate.connection.password">${database.password}</prop>
                    <!--cache 2-d level-->
                    <prop key="hibernate.cache.region.factory_class">org.hibernate.cache.ehcache.SingletonEhCacheRegionFactory</prop>
                    <prop key="hibernate.cache.use_second_level_cache">${hibernate.use_second_level_cache}</prop>
                    <prop key="net.sf.ehcache.configurationResourceName">cache/ehcache.xml</prop>
                    <!--cache 3-d level-->
                    <prop key="hibernate.cache.use_query_cache">${hibernate.use_query_cache}</prop>
                    <!--  -->
                </props>
            </property>
        </bean>
    </beans>

    <beans profile="springDataJpa">
        <context:property-placeholder location="classpath:db/gen.properties"
                                      order="1"/>

        <context:component-scan base-package="valksam.mvcweb.repository.springDataJpa"/>
        <jpa:repositories base-package="valksam.mvcweb.repository.springDataJpa"
                          entity-manager-factory-ref="entityManagerFactory"
                          transaction-manager-ref="transactionManager"/>

        <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"
              p:dataSource-ref="dataSource"
              p:packagesToScan="valksam.mvcweb.model">

            <property name="jpaPropertyMap">
                <map>
                    <entry key="#{T(org.hibernate.cfg.AvailableSettings).SHOW_SQL}" value="${hibernate.show_sql}"/>
                    <entry key="#{T(org.hibernate.cfg.AvailableSettings).FORMAT_SQL}" value="${hibernate.format_sql}"/>
                    <entry key="#{T(org.hibernate.cfg.AvailableSettings).USE_SQL_COMMENTS}" value="${hibernate.use_sql_comments}"/>
                    <!--cache 2-d level-->
                    <entry key="#{T(org.hibernate.cfg.AvailableSettings).CACHE_REGION_FACTORY}" value="org.hibernate.cache.ehcache.SingletonEhCacheRegionFactory"/>
                    <entry key="#{T(org.hibernate.cfg.AvailableSettings).USE_SECOND_LEVEL_CACHE}" value="${hibernate.use_second_level_cache}"/>
                    <entry key="#{T(org.hibernate.cache.ehcache.AbstractEhcacheRegionFactory).NET_SF_EHCACHE_CONFIGURATION_RESOURCE_NAME}" value="cache/ehcache.xml"/>
                    <!--cache 3-d level-->
                    <entry key="#{T(org.hibernate.cfg.AvailableSettings).USE_QUERY_CACHE}" value="${hibernate.use_query_cache}"/>
                    <!--  -->
                </map>
            </property>

            <property name="jpaVendorAdapter">
                <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"/>
            </property>
        </bean>

        <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager"
              p:entityManagerFactory-ref="entityManagerFactory"/>

        <tx:annotation-driven transaction-manager="transactionManager"/>
    </beans>

    <beans profile="springJdbc">
        <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close"
              p:driverClass="${database.driverClassName}"
              p:jdbcUrl="${database.url}"
              p:user="${database.username}"
              p:password="${database.password}"/>

        <context:component-scan base-package="valksam.mvcweb.repository.springJdbc"/>

        <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
            <constructor-arg ref="dataSource"/>
        </bean>

        <bean id="namedJdbcTemplate" class="org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate">
            <constructor-arg ref="dataSource"/>
        </bean>
    </beans>

    <beans profile="hibernateDs, springDataJpa">
        <bean id="dataSource" class="org.apache.tomcat.jdbc.pool.DataSource"
              p:driverClassName="${database.driverClassName}"
              p:url="${database.url}"
              p:username="${database.username}"
              p:password="${database.password}"
              p:defaultAutoCommit="false"/>
        <!--можно также задать параметры пула-->
    </beans>

    <beans profile="hibernateDs, hibernate">
        <bean id="transactionManager" class="org.springframework.orm.hibernate5.HibernateTransactionManager"
        p:sessionFactory-ref="sessionFactory"/>

        <tx:annotation-driven transaction-manager="transactionManager"/>
    </beans>

</beans>
